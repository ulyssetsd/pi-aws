# https://github.com/wg-easy/wg-easy/wiki/Using-WireGuard-Easy-with-Kubernetes
apiVersion: v1
kind: Namespace
metadata:
  name: wg-easy
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wg-easy-config
  namespace: wg-easy
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wg-easy
  namespace: wg-easy
  labels:
    app.kubernetes.io/name: wg-easy
spec:
  replicas: 1
  strategy:
    # Restrict to a single wg-easy instance, on redeploys it will tear down the old one before bringing a new one up
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: wg-easy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wg-easy
    spec:
      containers:
      - name: wg-easy
        image: ghcr.io/wg-easy/wg-easy:15
        ports:
        - containerPort: 51820
          protocol: UDP
          name: wg
        - containerPort: 51821
          protocol: TCP
          name: http
        env:
        - name: INSECURE
          value: "false"
        - name: WG_HOST
          value: "wg-easy.ulyssetassidis.fr"
        - name: WG_PORT
          value: "51820"
        # Use the http server for pod health checks
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 1
        startupProbe:
          failureThreshold: 30
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 1
        volumeMounts:
        - name: wg-config
          mountPath: /etc/wireguard
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        # Give pod permissions to modify iptables and load the wireguard kernel module
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
      restartPolicy: Always
      volumes:
      - name: wg-config
        persistentVolumeClaim:
          claimName: wg-easy-config
      - name: lib-modules
        hostPath:
          path: /lib/modules
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: wg-easy-web
  namespace: wg-easy
spec:
  selector:
    app.kubernetes.io/name: wg-easy
  ports:
  - port: 51821
    targetPort: http
    name: http
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: wg-easy-vpn
  namespace: wg-easy
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: wg-easy
  ports:
  - port: 51820
    targetPort: wg
    protocol: UDP
    name: wg
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wg-easy
  namespace: wg-easy
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - wg-easy.ulyssetassidis.fr
    secretName: wg-easy-tls
  rules:
  - host: wg-easy.ulyssetassidis.fr
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: wg-easy-web
            port:
              number: 51821
